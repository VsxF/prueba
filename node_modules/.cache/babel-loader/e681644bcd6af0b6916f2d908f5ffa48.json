{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\raenu\\\\Documents\\\\Proyectos\\\\prueba\\\\src\\\\componentes\\\\task1.js\";\nimport React from 'react';\nexport default class task1 extends React.Component {\n  render() {\n    let numbers = this.findNumbers();\n    console.log(\"ss\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        align: \"center\",\n        children: \"Los numeros rectangulares, tal que a + b + c = 100 son :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        align: \"center\",\n        children: [\"a: \", numbers[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        align: \"center\",\n        children: [\"b: \", numbers[1]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        align: \"center\",\n        children: [\"c: \", numbers[2]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this);\n  } //Encuentra los numeros solicitados\n\n\n  findNumbers() {\n    let squares = this.getSquares;\n    let numbers = [];\n\n    for (let i = 0; i < squares.length; i++) {\n      const a = squares[i];\n\n      for (let j = 0; j < squares.length; j++) {\n        const b = squares[j];\n\n        for (let k = 0; k < squares.length; k++) {\n          const c = squares[k];\n          console.log(\"si\");\n\n          if (this.getSum(a, b, c) && this.getRectangle(a, b, c)) {\n            console.log(a, b, c);\n            numbers.push(a);\n            numbers.push(b);\n            numbers.push(c);\n          }\n        }\n      }\n    }\n\n    return numbers;\n  } //Determina si los numeros suman 1000\n\n\n  getSum(a, b, c) {\n    return a + b + c === 1000 ? true : false;\n  } //Determina si son numeros rectangulares\n\n\n  getRectangle(a, b, c) {\n    return a ^ 2 + b ^ 2 === c ^ 2 ? true : false;\n  } //Encuentra todas las raices posibles < sqrt (1000)\n\n\n  getSquares() {\n    let squares = []; //max square < 1000 = 31\n\n    for (let i = 0; i < 31; i++) {\n      squares.push(i * i);\n    }\n\n    return squares;\n  }\n\n} // function Task1() {\n//   return (\n//     <div>\n//       ss\n//     </div>\n//   );\n// }","map":{"version":3,"sources":["C:/Users/raenu/Documents/Proyectos/prueba/src/componentes/task1.js"],"names":["React","task1","Component","render","numbers","findNumbers","console","log","squares","getSquares","i","length","a","j","b","k","c","getSum","getRectangle","push"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nexport default class task1 extends React.Component {\r\n    \r\n    render() {\r\n        let numbers = this.findNumbers()\r\n        console.log(\"ss\")\r\n        return (\r\n            <div>\r\n            <h2 align=\"center\">Los numeros rectangulares, tal que a + b + c = 100 son :</h2>\r\n            <h2 align=\"center\">a: {numbers[0]}</h2>\r\n            <h2 align=\"center\">b: {numbers[1]}</h2>\r\n            <h2 align=\"center\">c: {numbers[2]}</h2>\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    //Encuentra los numeros solicitados\r\n    findNumbers(){\r\n        let squares = this.getSquares\r\n        let numbers = []\r\n\r\n        for (let i = 0; i < squares.length; i++) {\r\n            const a = squares[i];\r\n            \r\n            for (let j = 0; j < squares.length; j++) {\r\n                const b = squares[j];\r\n                \r\n                for (let k = 0; k < squares.length; k++) {\r\n                    const c = squares[k];\r\n                    console.log(\"si\")\r\n                    if (this.getSum(a, b, c) && this.getRectangle(a, b, c)) {\r\n                        console.log(a, b, c)\r\n                        numbers.push(a)\r\n                        numbers.push(b)\r\n                        numbers.push(c)\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n        }\r\n        return numbers;\r\n    }\r\n\r\n    //Determina si los numeros suman 1000\r\n    getSum(a, b, c){\r\n        return (a + b + c === 1000) ? true : false;\r\n    }\r\n\r\n    //Determina si son numeros rectangulares\r\n    getRectangle(a, b, c) {\r\n        return (a^2 + b^2 === c^2) ? true : false;\r\n    }\r\n    \r\n\r\n    //Encuentra todas las raices posibles < sqrt (1000)\r\n    getSquares() {\r\n        let squares = []\r\n        //max square < 1000 = 31\r\n        for (let i = 0; i < 31; i++) {\r\n            squares.push(i*i)\r\n        }\r\n        return squares\r\n    }\r\n\r\n    \r\n}\r\n\r\n// function Task1() {\r\n//   return (\r\n//     <div>\r\n//       ss\r\n//     </div>\r\n//   );\r\n// }"]},"metadata":{},"sourceType":"module"}