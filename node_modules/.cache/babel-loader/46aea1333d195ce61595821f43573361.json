{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\raenu\\\\Documents\\\\Proyectos\\\\prueba\\\\src\\\\componentes\\\\task2.js\";\nimport React from 'react';\nimport Button from './button';\nimport Green from '../media/green.png';\nimport GreenOn from '../media/green_on.png';\nimport Red from '../media/red.png';\nimport RedOn from '../media/red_on.png';\nimport Yellow from '../media/yellow.png';\nimport YellowOn from '../media/yellow_on.png';\nimport Blue from '../media/blue.png';\nimport BlueOn from '../media/blue_on.png';\nimport Vline from '../media/v_line.png';\nimport Hline from '../media/h_line.png';\nlet sequence = [];\nlet count = 0;\nlet handeler = 0;\nexport default class task2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.show = this.show.bind(this);\n    this.handler = this.handler.bind(this);\n    this.state = {\n      actual: 0,\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: block;\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Start !\",\n          onClick: this.show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.aux\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Green,\n          on: GreenOn,\n          act: this.handler,\n          id: \"0\",\n          show: this.state.show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"image\",\n        src: Vline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Red,\n          on: RedOn,\n          act: this.handler,\n          id: \"1\",\n          show: this.state.show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: block;\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          src: Hline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Yellow,\n          on: YellowOn,\n          act: this.handler,\n          id: \"2\",\n          show: this.state.show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"image\",\n        src: Vline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Blue,\n          on: BlueOn,\n          act: this.handler,\n          id: \"3\",\n          show: this.state.show\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n  async start() {\n    this.show();\n  } //Muestra el patron de colores\n\n\n  async show() {\n    this.setState({\n      show: true\n    });\n    sequence.push(this.getNext());\n\n    for (let i = 0; i < sequence.length; i++) {\n      const item = sequence[i];\n      await this.wait();\n      document.getElementById(item).click();\n    }\n\n    await this.setState({\n      show: false\n    });\n  }\n\n  async wait() {\n    return new Promise(resolve => {\n      setTimeout(resolve, 2000);\n    });\n  }\n\n  handler(actualColor) {\n    let a = sequence.length;\n    let contador = this.state.count;\n\n    if (this.state.count !== sequence.length) {\n      handeler++;\n\n      if (actualColor !== sequence[this.state.count]) {\n        alert('Perdiste');\n      } else {\n        this.state.count++;\n        contador = this.state.count;\n      }\n\n      if (this.state.count === sequence.length) {\n        this.state.count = 0;\n        contador = this.state.count;\n        this.show();\n        return null;\n      } else {\n        handeler = 0;\n      }\n    } else {\n      handeler = 0;\n    }\n  }\n\n  getNext() {\n    return Math.floor(Math.random() * 4);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/raenu/Documents/Proyectos/prueba/src/componentes/task2.js"],"names":["React","Button","Green","GreenOn","Red","RedOn","Yellow","YellowOn","Blue","BlueOn","Vline","Hline","sequence","count","handeler","task2","Component","constructor","props","show","bind","handler","state","actual","render","aux","start","setState","push","getNext","i","length","item","wait","document","getElementById","click","Promise","resolve","setTimeout","actualColor","a","contador","alert","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from './button'\r\nimport Green from '../media/green.png'\r\nimport GreenOn from '../media/green_on.png'\r\nimport Red from '../media/red.png'\r\nimport RedOn from '../media/red_on.png'\r\nimport Yellow from '../media/yellow.png'\r\nimport YellowOn from '../media/yellow_on.png'\r\nimport Blue from '../media/blue.png'\r\nimport BlueOn from '../media/blue_on.png'\r\nimport Vline from '../media/v_line.png'\r\nimport Hline from '../media/h_line.png'\r\n\r\nlet sequence = []\r\nlet count = 0\r\nlet handeler = 0\r\n\r\nexport default class task2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.show = this.show.bind(this)\r\n        this.handler = this.handler.bind(this)\r\n        this.state = {\r\n            actual: 0,\r\n            count: 0\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div Style=\" position: relative; display: block;\">\r\n                    <input type=\"button\" value=\"Start !\" onClick={this.show}></input>\r\n                    <div>{this.state.aux}</div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Green} on={GreenOn} act={this.handler} id=\"0\"\r\n                         show={this.state.show}  />\r\n                </div>\r\n\r\n                <input type=\"image\" src={Vline}></input>\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Red} on={RedOn} act={this.handler} id=\"1\"\r\n                         show={this.state.show}  />\r\n                </div>\r\n\r\n                <div Style=\" position: relative; display: block;\">\r\n                    <input type=\"image\" src={Hline}></input>\r\n                </div>\r\n\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Yellow} on={YellowOn} act={this.handler} id=\"2\"\r\n                         show={this.state.show}  />\r\n                </div>\r\n\r\n                <input type=\"image\" src={Vline}></input>\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Blue} on={BlueOn} act={this.handler} id=\"3\"\r\n                         show={this.state.show}  />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async start() {\r\n        this.show()\r\n    }\r\n\r\n    //Muestra el patron de colores\r\n    async show() {\r\n        this.setState({ show: true })\r\n        sequence.push( this.getNext() )\r\n        \r\n        for (let i = 0; i < sequence.length; i++) {\r\n            const item = sequence[i];\r\n            await this.wait()\r\n            document.getElementById(item).click()\r\n                       \r\n        }\r\n        await this.setState({ show: false })\r\n    }\r\n\r\n    async wait() {\r\n        return new Promise(resolve => {\r\n          setTimeout(resolve, 2000);\r\n        });\r\n      }\r\n\r\n    handler(actualColor) {\r\n        let a = sequence.length\r\n        let contador = this.state.count\r\n        if (this.state.count !== sequence.length){\r\n\r\n            handeler++\r\n            if( actualColor !== sequence[this.state.count] ) {\r\n                alert('Perdiste')\r\n            } else {\r\n                this.state.count++\r\n                contador = this.state.count\r\n            }\r\n            if (this.state.count === sequence.length) {\r\n                this.state.count = 0\r\n                contador = this.state.count\r\n                this.show() \r\n                return null\r\n            } else {\r\n                handeler = 0\r\n            } \r\n        } else {\r\n            handeler = 0\r\n        }\r\n}\r\n\r\n\r\n    getNext() {\r\n        return Math.floor(Math.random() * 4);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}