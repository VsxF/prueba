{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\raenu\\\\Documents\\\\Proyectos\\\\prueba\\\\src\\\\componentes\\\\task2.js\";\nimport React from 'react';\nimport Button from './button';\nimport Green from '../media/green.png';\nimport GreenOn from '../media/green_on.png';\nimport Red from '../media/red.png';\nimport RedOn from '../media/red_on.png';\nimport Yellow from '../media/yellow.png';\nimport YellowOn from '../media/yellow_on.png';\nimport Blue from '../media/blue.png';\nimport BlueOn from '../media/blue_on.png';\nimport Vline from '../media/v_line.png';\nimport Hline from '../media/h_line.png';\nlet sequence = [];\nlet count = 0;\nexport default class task2 extends React.Component {\n  constructor(props) {\n    super(props);\n    this.start = this.start.bind(this);\n    this.handler = this.handler.bind(this);\n    this.check = this.check.bind(this);\n    this.state = {\n      actual: 0,\n      aux: 0,\n      show: true,\n      green: Green,\n      red: Red,\n      yellow: Yellow,\n      blue: Blue\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: block;\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Start !\",\n          onClick: this.start\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.aux\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Green,\n          on: GreenOn,\n          act: this.handler,\n          id: \"0\",\n          show: this.state.show,\n          check: this.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"image\",\n        src: Vline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Red,\n          on: RedOn,\n          act: this.handler,\n          id: \"1\",\n          show: this.state.show,\n          check: this.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: block;\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"image\",\n          src: Hline\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Yellow,\n          on: YellowOn,\n          act: this.handler,\n          id: \"2\",\n          show: this.state.show,\n          check: this.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"image\",\n        src: Vline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        Style: \" position: relative; display: inline-block;\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          image: Blue,\n          on: BlueOn,\n          act: this.handler,\n          id: \"3\",\n          show: this.state.show,\n          check: this.check\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this);\n  }\n\n  async start() {\n    sequence.push(this.getNext());\n\n    for (let i = 0; i < sequence.length; i++) {\n      const item = sequence[i];\n      await new Promise(resolve => setTimeout(() => {\n        this.setState({\n          aux: i\n        }); //this.showColor(item)\n\n        resolve();\n      }), 1000);\n    }\n  } //Muestra el color de la secuencia\n\n\n  showColor(id) {\n    document.getElementById(id).click();\n  }\n\n  check() {}\n\n  handler(actualColor) {\n    if (actualColor !== sequence[count]) {\n      alert('Perdiste');\n    }\n\n    count++;\n    let aux = this.state.answers;\n    aux.push(actualColor);\n    this.setState({\n      actual: actualColor,\n      answers: aux\n    });\n  }\n\n  getNext() {\n    return Math.floor(Math.random() * 4);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/raenu/Documents/Proyectos/prueba/src/componentes/task2.js"],"names":["React","Button","Green","GreenOn","Red","RedOn","Yellow","YellowOn","Blue","BlueOn","Vline","Hline","sequence","count","task2","Component","constructor","props","start","bind","handler","check","state","actual","aux","show","green","red","yellow","blue","render","push","getNext","i","length","item","Promise","resolve","setTimeout","setState","showColor","id","document","getElementById","click","actualColor","alert","answers","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Button from './button'\r\nimport Green from '../media/green.png'\r\nimport GreenOn from '../media/green_on.png'\r\nimport Red from '../media/red.png'\r\nimport RedOn from '../media/red_on.png'\r\nimport Yellow from '../media/yellow.png'\r\nimport YellowOn from '../media/yellow_on.png'\r\nimport Blue from '../media/blue.png'\r\nimport BlueOn from '../media/blue_on.png'\r\nimport Vline from '../media/v_line.png'\r\nimport Hline from '../media/h_line.png'\r\n\r\nlet sequence = []\r\nlet count = 0\r\n\r\nexport default class task2 extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.start = this.start.bind(this)\r\n        this.handler = this.handler.bind(this)\r\n        this.check = this.check.bind(this)\r\n        this.state = {\r\n            actual: 0,\r\n            aux: 0,\r\n            show: true,\r\n            green: Green,\r\n            red: Red,\r\n            yellow: Yellow,\r\n            blue: Blue\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div Style=\" position: relative; display: block;\">\r\n                    <input type=\"button\" value=\"Start !\" onClick={this.start}></input>\r\n                    <div>{this.state.aux}</div>\r\n                </div>\r\n                <br></br>\r\n                <br></br>\r\n\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Green} on={GreenOn} act={this.handler} id=\"0\"\r\n                         show={this.state.show} check={this.check} />\r\n                </div>\r\n\r\n                <input type=\"image\" src={Vline}></input>\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Red} on={RedOn} act={this.handler} id=\"1\"\r\n                         show={this.state.show} check={this.check} />\r\n                </div>\r\n\r\n                <div Style=\" position: relative; display: block;\">\r\n                    <input type=\"image\" src={Hline}></input>\r\n                </div>\r\n\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Yellow} on={YellowOn} act={this.handler} id=\"2\"\r\n                         show={this.state.show} check={this.check} />\r\n                </div>\r\n\r\n                <input type=\"image\" src={Vline}></input>\r\n                <div Style=\" position: relative; display: inline-block;\">\r\n                    <Button image={Blue} on={BlueOn} act={this.handler} id=\"3\"\r\n                         show={this.state.show} check={this.check} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    async start() {\r\n        sequence.push( this.getNext() )\r\n\r\n        for (let i = 0; i < sequence.length; i++) {\r\n            const item = sequence[i];\r\n            \r\n            await new Promise((resolve) => setTimeout(() => {\r\n                this.setState({ aux : i })\r\n                //this.showColor(item)\r\n                resolve()\r\n            }), 1000)\r\n           \r\n        }\r\n        \r\n    }\r\n\r\n    //Muestra el color de la secuencia\r\n    showColor(id) {\r\n        document.getElementById(id).click()\r\n    }\r\n\r\n    check() {\r\n\r\n    }\r\n\r\n    handler(actualColor) {\r\n\r\n        if( actualColor !== sequence[count] ) {\r\n            alert('Perdiste')\r\n        }\r\n\r\n        count++\r\n\r\n        let aux = this.state.answers\r\n        aux.push(actualColor)\r\n\r\n        this.setState({ actual: actualColor, answers: aux })\r\n\r\n    }\r\n\r\n\r\n    getNext() {\r\n        return Math.floor(Math.random() * 4);\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}